apiVersion: apps/v1
kind: Deployment
metadata:
  name: poeta-api
  labels:
    app: poeta-api
spec:
  selector:
    matchLabels:
      app: poeta-api
  template:
    metadata:
      labels:
        app: poeta-api
    spec:
      containers:
        - name: api
          image: asia.gcr.io/poeta-276706/poeta-api:latest
          command: ["rails", "s", "-p", "3000", "-b", "0.0.0.0"]
          ports:
            - containerPort: 3000
          env:
            - name: RAILS_ENV
              value: production
            - name: RAILS_MASTER_KEY
              value: 91c0501448efc018990344ba434f7b92
            - name: POETA_DB_HOST
              value: 127.0.0.1
            # These secrets are required to start the pod.
            # [START cloudsql_secrets]
            - name: POETA_DB_USERNAME
              value: root
              # valueFrom:
              #   secretKeyRef:
              #     name: cloudsql
              #     key: username
            - name: POETA_DB_PASSWORD
              value: password
              # valueFrom:
              #   secretKeyRef:
              #     name: cloudsql
              #     key: password
            # [END cloudsql_secrets]
        # Change <INSTANCE_CONNECTION_NAME> here to include your GCP
        # project, the region of your Cloud SQL instance and the name
        # of your Cloud SQL instance. The format is
        # $PROJECT:$REGION:$INSTANCE
        # [START proxy_container]
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.16
          command: ["/cloud_sql_proxy",
                    "-instances=poeta-276706:asia-northeast1:poeta-db2=tcp:3306",
                    # If running on a VPC, the Cloud SQL proxy can connect via Private IP. See:
                    # https://cloud.google.com/sql/docs/mysql/private-ip for more info.
                    # "-ip_address_types=PRIVATE",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          # [START cloudsql_security_context]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          # [END cloudsql_security_context]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
        - name: front
          image: asia.gcr.io/poeta-276706/poeta-front:latest
          command: ["npm", "start"]
          ports:
            - containerPort: 5000:3000
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-oauth-credentials
      # [END volumes]
