version: 2
jobs:
  test:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
        environment:
          BUNDLER_VERSION: 2.0.2
          RAILS_ENV: 'test'
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          MYSQL_ROOT_HOST: '%'

    working_directory: ~/languageMemoApp

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: mv config/database.yml.ci config/database.yml
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:migrate
      - run:
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      # - run:
      #     name: rubocop
      #     command: bundle exec rubocop

      - run: cd ./frontend/
      - run:
          name: npm install
          command: npm install
      - run:
          name: jest
          command: npm test
      - run:
          name: lint
          command: npm run lintfix

  deploy:
    docker:
      - image: google/cloud-sdk
    environment:
      PROJECT_NAME: 'poeta'
      GOOGLE_PROJECT_ID: 'poeta-276706'
      GOOGLE_COMPUTE_ZONE: 'asia-northeast1-a'
      GOOGLE_CLUSTER_NAME: 'poeta'
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Docker build
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker build -t asia.gcr.io/poeta-276706/poeta-api:latest .
              docker build -t asia.gcr.io/poeta-276706/poeta-front:latest ./frontend/.
            fi
      - run:
          name: Deploy application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              apt-get install -qq -y gettext
              gcloud auth activate-service-account --key-file=./account-auth.json
              gcloud --quiet config set project $GOOGLE_PROJECT_ID
              gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE
              gcloud --quiet container clusters get-credentials $GOOGLE_CLUSTER_NAME
              gcloud docker -- push asia.gcr.io/poeta-276706/poeta-api:latest
              gcloud docker -- push asia.gcr.io/poeta-276706/poeta-front:latest
              envsubst < ./deployment.yml > patched_deployment.yml
              kubectl replace -f patched_deployment.yml
            fi

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
